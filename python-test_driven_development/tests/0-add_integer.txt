#0-add_integer.py

================================
Function that adds two integers:
================================

The function takes two arguments 'a' and 'b' as input, and returns the result
of their sum as an integer.

===========
Parameters:
===========

'a' - int or float, first integer to be added
'b' - int or float, second integer to be added

=======
Return:
=======

The sum of 'a' and 'b' as integers

=======
Raises:
=======

If 'a' or 'b' are not integers or floats, TypeError is raised

===========
How to use:
===========

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(3, 2)
5
>>> add_integer(10, 11)
21
>>> add_integer(10000000, 5000000000)
5010000000
>>> add_integer(3.5, 4.6)
8
>>> add_integer(3.9, 6.7)
11
>>> add_integer(-3, -5)
-8
>>> add_integer(-3, 5)
2
>>> add_integer('a', 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 5, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(3, '5')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(float('yo'), float('yo'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: could not convert string to float: 'yo'
